import React, { useContext } from "react";
import { ThemeContext } from "../ThemeContext";
import InterfaceSelector from "../components/deauth/InterfaceSelector";
import noWifi from "../images/no-wifi.gif";

const Deauth = () => {
  const { theme } = useContext(ThemeContext);

  return (
    <div
      className={`flex flex-col justify-center items-center h-screen p-6 sm:p-4 md:p-6 lg:p-8 xl:p-10 2xl:p-12 ${
        theme === "dark"
          ? "bg-gray-900 text-gray-100"
          : "bg-gray-100 text-gray-900"
      }`}
    >
      <img
        src={noWifi.toString()}
        alt="John the Ripper Logo"
        className="mb-2 sm:mb-4 w-16 sm:w-32"
      />
      <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold mb-4 text-center">
        Let's Deauth!
      </h1>

      <h2 className="text-lg sm:text-xl font-bold mb-2 sm:mb-4">
        Select a wireless interface to use:
      </h2>

      <InterfaceSelector />

      {/* <p className="text-lg sm:text-xl md:text-2xl lg:text-3xl text-center">
        2. airmon-ng start wlan0 (to start monitor mode)
        <br />
        3. airodump-ng wlan0mon (to see all the targets)
        <br />
        4. airodump-ng -c [channel] --bssid [bssid] -w [filename] wlan0mon (to
        start capturing packets)
        <br />
        5. aireplay-ng -0 0 -a [bssid] wlan0mon (to deauth all targets)
        <br />
      </p> */}

      {/* <h2
        className={`mt-2 sm:mt-4 text-lg sm:text-xl font-bold ${
          theme === "dark" ? "text-white" : "text-black"
        }`}
      >
        Result:
      </h2>
      <div className="mt-2 w-full max-w-md">
        {result && (
          <pre
            className={`overflow-x-auto p-2 sm:p-4 rounded-md shadow ${
              theme === "dark" ? "bg-black text-white" : "bg-white text-black"
            }`}
          >
            {result}
          </pre>
        )}
        {error && (
          <p
            className={`text-red-500 ${
              theme === "dark" ? "text-red-300" : "text-red-500"
            }`}
          >
            {error}
          </p>
        )}
      </div> */}
    </div>
  );
};

export default Deauth;
