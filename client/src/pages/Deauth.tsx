import React, { useState, useEffect, useContext } from "react";
import { ThemeContext } from "../ThemeContext";
import noWifi from "../images/no-wifi.gif";

interface AccessPoint {
  BSSID: string;
  ESSID: string;
  channel: number;
  power: number;
}

const Deauth = () => {
  const { theme } = useContext(ThemeContext);
  const [accessPoints, setAccessPoints] = useState<AccessPoint[]>([]);
  const [ws, setWs] = useState<WebSocket | null>(null);

  useEffect(() => {
    const websocket = new WebSocket("ws://localhost:3002");

    websocket.onopen = () => {
      console.log("Connected to WebSocket server");
      websocket.send(JSON.stringify({ type: "deauth-scan" }));
    };

    websocket.onmessage = (event) => {
      const msg = JSON.parse(event.data);
      if (msg.type === "airodump-ng-output") {
        // console.log(msg.data);
        setAccessPoints(msg.data);
      }
    };

    setWs(websocket);
  }, []);

  const handleDeauth = (BSSID: string) => {
    if (ws) {
      console.log("Sending deauth message to backend: ", BSSID);
      ws.send(JSON.stringify({ type: "deauth-deauth", data: { BSSID } }));
    }
  };

  return (
    <div
      className={`flex flex-col justify-center items-center min-h-screen p-6 sm:p-4 md:p-6 lg:p-8 xl:p-10 2xl:p-12 ${
        theme === "dark"
          ? "bg-gray-900 text-gray-100"
          : "bg-gray-100 text-gray-900"
      }`}
      style={{
        backgroundImage:
          theme === "dark"
            ? `radial-gradient(circle 1px, rgba(255,255,255,0.2) 1px, transparent 1px)`
            : `radial-gradient(circle 1px, rgba(0,0,0,0.2) 1px, transparent 1px)`,
        backgroundSize: "35px 35px",
      }}
    >
      <img
        src={noWifi.toString()}
        alt="No Wifi Gif"
        className="mb-2 sm:mb-4 w-16 sm:w-32"
        style={theme === "dark" ? { filter: "invert(1)" } : {}}
      />

      <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold mb-4 text-center">
        Let's Deauth!
      </h1>

      <h2 className="text-lg sm:text-xl md:text-2xl lg:text-3xl font-semibold mb-4 text-center">
        Here is a list of all the available access points
      </h2>

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {accessPoints.map((accessPoint, index) => (
          <div
            key={index}
            className={`flex flex-col p-4 border-2 rounded-lg shadow-lg ${
              theme === "dark"
                ? "border-gray-600 bg-gray-800"
                : "border-gray-300 bg-white"
            }`}
          >
            <div className="flex justify-between items-center">
              <span
                className={`${theme === "dark" ? "text-white" : "text-black"}`}
              >
                {accessPoint.ESSID}
              </span>
              <button
                className="items-center px-2 sm:px-4 py-1 sm:py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 w-auto sm:w-auto transition duration-500 ease-in-out transform bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500"
                onClick={() => handleDeauth(accessPoint.BSSID)}
              >
                Deauth
              </button>
            </div>
            <p className="mt-2 text-sm text-gray-500">
              BSSID:{" "}
              {accessPoint.BSSID !== ""
                ? accessPoint.BSSID
                : "No BSSID available"}
            </p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Deauth;
