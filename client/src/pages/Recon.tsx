import React, { useState } from 'react';
import nmapLightLogo from '../images/nmap-light.gif';
import nmapDarkLogo from '../images/nmap-dark.gif';
import { ThemeContext } from '../ThemeContext';

const Recon = () => {
    const { theme } = React.useContext(ThemeContext);

    const [flags, setFlags] = useState<string[]>([]);
    const [command, setCommand] = useState('');
    const [description, setDescription] = useState('');

    const handleFlagToggle = (flag: string) => {
        let updatedFlags: string[] = [];

        if (flags.includes(flag)) {
            updatedFlags = flags.filter((f) => f !== flag);
        } else {
            updatedFlags = [...flags, flag];
        }

        setFlags(updatedFlags);
        generateCommand(updatedFlags);
        generateDescription(updatedFlags);
    };

    const generateCommand = (flags: string[]) => {
        const command = `nmap ${flags.join(' ')}`;
        setCommand(command);
    };

    const generateDescription = (flags: string[]) => {
        const descriptions = flags.map((flag) => {
            switch (flag) {
            case "-sS":
                return "TCP SYN scan";
            case "-sU":
                return "UDP scan";
            case "-p 80":
                return "Scan port 80";
            case "-A":
                return "Enables OS detection and Version detection, Script scanning and Traceroute";
            case "-O":
                return "Enables OS detection";
            case "-sV":
                return "Probes open ports to determine service/version info";
            case "-p-":
                return "Scans all 65535 ports";
            case "-F":
                return "Fast mode - Scan fewer ports than the default scan";
            case "-T4":
                return "Sets timing template to 'aggressive'";
            default:
                return "";
            }
        });
    
        setDescription(descriptions.join("\n"));
    };

    return (
        <div className="flex flex-col items-center justify-center min-h-screen bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-gray-50 p-4">
            <img src={theme === 'dark' ? nmapDarkLogo.toString() : nmapLightLogo.toString()} alt="Nmap Logo" className="w-64 mb-8" />
            <div className="flex space-x-4">
                <button onClick={() => handleFlagToggle('-sS')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-sS') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-sS</button>
                <button onClick={() => handleFlagToggle('-sU')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-sU') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-sU</button>
                <button onClick={() => handleFlagToggle('-p 80')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-p 80') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-p 80</button>
                <button onClick={() => handleFlagToggle('-A')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-A') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-A</button>
                <button onClick={() => handleFlagToggle('-O')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-O') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-O</button>
                <button onClick={() => handleFlagToggle('-sV')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-sV') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-sV</button>
                <button onClick={() => handleFlagToggle('-p-')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-p-') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-p-</button>
                <button onClick={() => handleFlagToggle('-F')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-F') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-F</button>
                <button onClick={() => handleFlagToggle('-T4')} className={`px-4 py-2 rounded hover:bg-blue-700 ${flags.includes('-T4') ? 'bg-blue-700 text-white' : 'bg-blue-500 text-white'}`}>-T4</button>
            </div>
            <div className="mt-8">
                <h2 className="text-2xl font-bold mb-2">Command:</h2>
                <p className="text-2xl font-mono">{command}</p>
                <h2 className="text-2xl font-bold mt-4 mb-2">Description:</h2>
                <ul className="list-disc list-inside">
                    {description.split('\n').map((desc, index) => (
                        <li key={index}>{desc}</li>
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default Recon;
