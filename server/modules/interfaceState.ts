import { runCommand } from "./sudoRunCommand";

export class InterfaceState {
  private mode: "managed" | "monitor" = "managed";
  private iface: string = process.env.INTERFACE;

  getInterface() {
    return this.mode === "monitor" ? `${this.iface}mon` : this.iface;
  }

  getMode() {
    return this.mode;
  }

  async setMode(mode: "managed" | "monitor") {
    if (mode === this.mode) {
      return;
    }

    if (mode === "monitor") {
      await runCommand("airmon-ng check kill");
      await runCommand(`airmon-ng start ${this.iface}`);
    } else {
      await runCommand(`airmon-ng stop ${this.iface}mon`);
    }

    this.mode = mode;
  }

  async initialize() {
    try {
      await runCommand(`airmon-ng stop ${this.iface}mon`);
      this.mode = "managed";
    } catch (error) {
      // wlan0mon does not exist, so the interface is already in managed mode
    }
  }
}

const interfaceState = new InterfaceState();

export default interfaceState;
