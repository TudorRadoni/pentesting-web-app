// This module needs the WiFi interface to be in monitor mode.
// Therefore, it will set it to monitor mode when the frontend starts

import { runCommand } from "./sudoRunCommand";
import interfaceState from "./interfaceState";
import parseAirodumpOutput from "./parseAirodumpCSV";
import { readFileSync } from "fs";

// TODO: cand porneste backend-ul, sterge /tmp/airodump_output-01.csv
// cand intru in modul de deauth, porneste airodump-ng si salveaza in /tmp/airodump_output-01.csv
// in timp ce scaneaza, o data la 1 secunda, trimite datele catre frontend prin websocket

// export function handleDeauth(ws, data) {

//     interfaceState.setMode("monitor").then(() => {
//         runCommand(`airodump-ng -w airodump_output --output-format csv ${interfaceState.getInterface()}`).then((output) => {
//             ws.send(JSON.stringify({ type: "airodump-ng-output", data: output }));
//         });
//     });
// }

export function handleDeauthDeauth(ws, msg: { BSSID: string }) {
  console.log("Deauthing", msg.BSSID);
}

export function handleDeauthScan(ws) {
  setInterval(() => {
    const output = readFileSync("/home/kali/aps-01.csv", "utf-8");
    const accessPoints = parseAirodumpOutput(output);
    ws.send(JSON.stringify({ type: "airodump-ng-output", data: accessPoints }));
  }, 1000);
}
