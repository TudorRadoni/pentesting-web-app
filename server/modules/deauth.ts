import { exec } from 'child_process';
import { promisify } from 'util';

require("dotenv").config();
function getInterface(): string {
    const interfaceName = process.env.INTERFACE;
    if (!interfaceName) {
        console.error("Interface not found in environment variables");
        throw new Error("Interface not found");
    }
    return interfaceName;
}

function getPasswordFromEnv(): string {
    const password = process.env.PASSWORD;
    if (!password) {
        console.error("Password not found in environment variables");
        throw new Error("Password not found");
    }
    return password;
}

const execAsync = promisify(exec);
async function switchMode(mode: 'managed' | 'monitor'): Promise<boolean> {
    try {
        const { stdout, stderr } = await execAsync(`echo ${getPasswordFromEnv()} | sudo -S airmon-ng ${mode === 'managed' ? 'start' : 'stop'} ${getInterface()}`);
        
        if (stderr) {
            console.error(`Error switching to ${mode} mode:`, stderr);
            return false;
        }

        console.log(`Switched to ${mode} mode:`, stdout);
        return true;
    } catch (error) {
        console.error(`Error switching to ${mode} mode:`, error);
        return false;
    }
}

export function setMonitorMode() {
    console.log('Setting monitor mode...');
}
